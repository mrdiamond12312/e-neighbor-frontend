/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF, useAnimations } from '@react-three/drei';
import { GroupProps } from '@react-three/fiber';
import React, { useEffect, useRef } from 'react';
import * as THREE from 'three';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';

type GLTFResult = GLTF & {
  nodes: {
    druid: THREE.SkinnedMesh;
    root: THREE.Bone;
  };
  materials: {
    color_main: THREE.MeshStandardMaterial;
  };
};

// type ActionName = 'PortalOpen' | 'Still' | 'Waiting';
// type GLTFActions = Record<ActionName, THREE.AnimationAction>;

const Druid: React.FC<GroupProps> = (props: GroupProps) => {
  const group = useRef<THREE.Group>(null);

  const { nodes, materials, animations } = useGLTF(
    'https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/druid/model.gltf',
  ) as unknown as GLTFResult;

  const { actions } = useAnimations(animations, group);
  useEffect(() => {
    actions['Waiting']?.play();
  }, []);

  return (
    <group ref={group} {...props} dispose={null}>
      <group scale={1.91}>
        <primitive object={nodes.root} />
        <skinnedMesh
          geometry={nodes.druid.geometry}
          material={materials.color_main}
          skeleton={nodes.druid.skeleton}
        />
      </group>
    </group>
  );
};

export default Druid;

useGLTF.preload(
  'https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/druid/model.gltf',
);
